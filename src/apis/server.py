import os
from flask_jwt_extended import JWTManager
from resources.home import Home
from resources.auth import Auth
from resources.sendgrid import Sendgrid
from resources.leads import Leads
from resources.contacts import Contacts
from libs.email_helper import EmailHelper
from flask_restful_swagger_3 import Api
from swagger_ui import api_doc
from libs.shared.config import Config
from libs.flask_app import FlaskApp

# Autogenerated docs and swagger:
# https://stackoverflow.com/questions/40165665/flask-restful-vs-flask-restplus

_PORT = int(os.environ.get('PORT', 8885))
app = FlaskApp.app()
EmailHelper.mail_config(app)


# Use the swagger Api class as you would use the flask restful class.
# It supports several (optional) parameters, these are the defaults:
# Append json at end of url: api/swagger.json
api = Api(app, api_spec_url='/api/swagger', api_spec_base={
    'openapi': '3.0.0',
    'info': {
        'title': 'Recommendation Engine API',
        'description': '',
        'termsOfService': '',
        'contact': {},
        'license': {},
        'version': '1.0'
    },
    'servers': [],
    'components': {
        'securitySchemes': {
            'bearerAuth': {
                'type': 'http',
                        'scheme': 'bearer',
                        'bearerFormat': 'JWT'    # optional, arbitrary value for documentation purposes
            }
        }
    },
    'paths': {},
    'security': [],
    'tags': [],
    'externalDocs': {}
})
# To view swagger ui: /api
api_doc(app, config_url='/api/swagger.json',
        url_prefix='/api',
        title='Recommendation Engine API')

jwt = JWTManager(app)

app.config['JWT_SECRET_KEY'] = Config.secret(os.environ['ENV'], 'recommendation-engine-jwt')
app.config['JWT_IDENTITY_CLAIM'] = 'sub'
app.config['PROPAGATE_EXCEPTIONS'] = True  # flask_restful error handler conflicts with jwt error handler

# Define routes
api.add_resource(Home, '/')
api.add_resource(Auth, '/auth')
api.add_resource(Sendgrid, '/sendgrid')
api.add_resource(Leads, '/leads')
api.add_resource(Contacts, '/contacts')


if __name__ == "__main__":
    app.run(host='0.0.0.0', port=_PORT)
